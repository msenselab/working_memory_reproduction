geom_line(aes(color = WMSize),
stat = "identity", position = position_dodge(width = 0.2)) +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.2)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
coord_cartesian(ylim = c(0.2, 0.35)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="CV (s)",
color = "Memory Load", shape ="Memory Load")+
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c(.8, .8),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
# Exp 3
plt_RprCV_Exp3 <- ggplot(data = mRpr %>% filter(Exp == 'Exp. 3'),
aes(curDur, m_cv, ymin = m_cv - se_cv,
ymax = m_cv + se_cv, group=WMSize,
color=as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(color = WMSize),
stat = "identity",position = position_dodge(width = 0.2)) +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.2)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
coord_cartesian(ylim = c(0.17, 0.29)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="CV (s)",
color = "Memory Load", shape ="Memory Load")+
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c(.8, .8),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
# Exp 4
plt_RprCV_Exp4 <- ggplot(data = mRpr %>% filter(Exp == 'Exp. 4'),
aes(curDur, m_cv, ymin = m_cv - se_cv,
ymax = m_cv + se_cv, group = WMSize,
color=as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(color = WMSize),
stat = "identity",position = position_dodge(width = 0.2)) +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.2)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
coord_cartesian(ylim = c(0.17, 0.31)) +
scale_y_continuous(breaks=c(0.2, 0.25, 0.3)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="CV (s)",
color = "Memory Load", shape ="Memory Load")+
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c(.8, .8),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
# Exp 5
plt_RprCV_Exp5 <- ggplot(data = mRpr_Exp5,
aes(curDur, m_cv, ymin = m_cv - se_cv,
ymax = m_cv + se_cv,
group = interaction(WMSize,gap),
color=as.factor(WMSize),
shape=as.factor(WMSize))) +
geom_line(aes(linetype = gap),
stat = "identity",position = position_dodge(width = 0.2)) +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.2)) +
geom_errorbar(width=.2, position = position_dodge(width = 0.2)) +
coord_cartesian(ylim = c(0.15, 0.3)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="CV (s)",
color = "Memory Load", shape ="Memory Load", linetype = "Gap")+
theme_new + colorSet3 +
guides(linetype = guide_legend(order = 1),
shape = guide_legend(order = 2), color = guide_legend(order = 2)) +
theme(legend.position = "top", legend.justification = c(.6, .6),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
# Experiment 6
plt_RprCV_Exp6 <- ggplot(data  = mRpr_Exp6,
aes(curDur, m_cv, ymin = m_cv - se_cv,
ymax = m_cv + se_cv,
group=interaction(WMSize, Exp),
color=as.factor(WMSize),
shape=as.factor(WMSize))) +
geom_line(aes(color = WMSize), stat = "identity",
position = position_dodge(width = 0.05)) +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.05)) +
geom_errorbar(width=.2, position = position_dodge(width = 0.05)) +
facet_wrap("Exp") +
coord_cartesian(ylim = c(0.15, 0.35)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="CV (s)",
color = "Memory Load", shape ="Memory Load") +
theme_new + colorSet3 + theme(strip.text=element_text(size=0, face="bold")) +
guides(color = FALSE, shape = FALSE)
plt_RprCV_Exp6
plt_RprCV_Exp1
plt_RprCV_Exp2
plt_RprCV_Exp3
plt_RprCV_Exp4
plt_RprCV_Exp5
plt_RprCV_Exp6
##############################
# (1) load all valid data
# load valid data for Exp 1-5
AllExpData = read.csv(paste0("../data/AllValidData.csv")) %>% filter(valid == 1)
AllExpData$WMSize <- factor(AllExpData$WMSize, labels=c("low","medium","high"))
AllExpData$Exp <- gsub("^.{0,3}","Exp. ",AllExpData$Exp) #"Exp" to "Exp. "
# load valid data for Exp 6a, 6b and 6c
Data_Exp6 <- read.csv(paste0("../data/Exp6.csv")) %>% filter(valid == 1)
Data_Exp6$WMSize <- factor(Data_Exp6$WMSize, labels = c("low","medium","high"))
##############################
# (2) calculate accuracy
AllExpData$WMCrr <- AllExpData$TPresent == AllExpData$WMRP
Data_Exp6$WMCrr <- Data_Exp6$TPresent == Data_Exp6$WMRP
# Exp 1-4 (factor: WM load, Exp)
WMCrr <- dplyr::group_by(AllExpData%>%filter(Exp!='Exp. 5'),Exp,WMSize,NSub)%>%
dplyr::summarize(n=n(), m_WMCrr=mean(WMCrr), se_WMCrr=sd(WMCrr)/sqrt(n-1))
WMCrr %>% dplyr::group_by(Exp, WMSize) %>%
dplyr::summarize(n = n(), mean_WMCrr = mean(m_WMCrr),
se_WMCrr = sd(m_WMCrr)/sqrt(n-1) ) -> crrForExp1to4
# Exp 5 (factors: WM load, Gap)
WMCrr_Exp5 <- dplyr::group_by(AllExpData %>% filter(Exp=='Exp. 5'),
WMSize, NSub, gap) %>%
dplyr::summarize(n = n(), m_WMCrr = mean(WMCrr),
se_WMCrr = sd(WMCrr)/sqrt(n-1))
WMCrr_Exp5$gap<- factor(WMCrr_Exp5$gap, labels = c("short", "long"))
WMCrr_Exp5 %>% dplyr::group_by(gap, WMSize) %>%
dplyr::summarize(n = n(), mean_WMCrr = mean(m_WMCrr),
se_WMCrr = sd(m_WMCrr)/sqrt(n-1)) -> crrForExp5
# Exp 6 (factor: WM load, Exp)
WMCrr_Exp6 <- dplyr::group_by(Data_Exp6, Exp, WMSize, NSub) %>%
dplyr::summarize(n = n(), m_WMCrr = mean(WMCrr),
se_WMCrr = sd(WMCrr)/sqrt(n-1))
WMCrr_Exp6 %>% dplyr::group_by(Exp, WMSize) %>%
dplyr::summarize(n = n(), mean_WMCrr = mean(m_WMCrr),
se_WMCrr = sd(m_WMCrr)/sqrt(n-1) ) -> crrForExp6
##############################
# (3) calculate mean and CV of reproduction biases
AllExpData$Exp = as.factor(AllExpData$Exp)
# Exp 1-4 (factors: Duration, WM load)
mRpr_sub <- dplyr::group_by(AllExpData, curDur, Exp, NSub, WMSize) %>%
dplyr::summarize(n = n(), m_repDur = mean(repDur), sd_repDur = sd(repDur),
cv = sd_repDur/ m_repDur, mBias = mean(repDur-curDur),
sdBias = sd(repDur-curDur))
mRpr <- mRpr_sub %>% dplyr::group_by(Exp, curDur, WMSize) %>%
dplyr::summarize(n = n(), m_m_repDur = mean(m_repDur),
m_bias = mean(m_repDur-curDur),
se_bias = sd(m_repDur-curDur)/sqrt(n-1),
m_cv= mean(cv), se_cv=sd(cv)/sqrt(n-1))
# Exp 5 (factors: Duration, WM load, Gap)
Data_Exp5 <- AllExpData %>% filter(Exp == "Exp. 5") # load valid data of Exp 5
Data_Exp5$gap <- factor(Data_Exp5$gap, labels = c("short", "long")) # mark Gap
mRpr_sub_Exp5 <- dplyr::group_by(Data_Exp5, curDur, Exp, NSub, WMSize, gap) %>%
dplyr::summarize(n = n(), m_repDur = mean(repDur), sd_repDur = sd(repDur),
cv = sd_repDur/ m_repDur)
mRpr_Exp5 <- mRpr_sub_Exp5 %>% dplyr::group_by(Exp, curDur, WMSize, gap) %>%
dplyr::summarize(n = n(), m_m_repDur = mean(m_repDur),
m_bias = mean(m_repDur-curDur),
se_bias = sd(m_repDur-curDur)/sqrt(n-1),
m_cv= mean(cv), se_cv=sd(cv)/sqrt(n-1))
# Exp 6 (factors: Duration, WM load, Exp)
mRpr_sub_Exp6 <-  dplyr::group_by(Data_Exp6, curDur, Exp, NSub, WMSize) %>%
dplyr::summarize(n = n(), m_repDur = mean(repDur), sd_repDur = sd(repDur),
cv = sd_repDur/ m_repDur)
mRpr_Exp6 <- mRpr_sub_Exp6 %>% dplyr::group_by(Exp, curDur, WMSize) %>%
dplyr::summarize(n = n(), m_m_repDur = mean(m_repDur),
m_bias = mean(m_repDur-curDur),
se_bias = sd(m_repDur-curDur)/sqrt(n-1),
m_cv= mean(cv), se_cv=sd(cv)/sqrt(n-1))
##############################
# (4) calculate mean Reaction time in the reproduction phase
# RT denotes as the time from the onset of Reproduction cue
# to the onset of reproduction (response)
# mark valid RT in Exp6: criteria (200 ms ~ 2.5 sec)
Data_Exp6$validRT <- Data_Exp6$repWaitTime>=0.2 & Data_Exp6$repWaitTime<=2.5
Data_Exp6_mRT <- Data_Exp6 %>% filter(validRT == TRUE)
# calculate mean RT in factors: Duration, WM load, Exp
mRT_sub_Exp6 <-  dplyr::group_by(Data_Exp6_mRT, curDur, Exp, NSub, WMSize) %>%
dplyr::summarize(n = n(), mRT = mean(repWaitTime))
mRT_Exp6 <- mRT_sub_Exp6 %>% dplyr::group_by(Exp, curDur, WMSize) %>%
dplyr::summarize(n = n(), m_mRT = mean(mRT), se_mRT = sd(mRT)/sqrt(n-1))
# Exp 1
plt_RprBias_Exp1 <- ggplot(data = mRpr %>% filter(Exp == 'Exp. 1'),
aes(curDur, m_bias, ymin = m_bias - se_bias,
ymax = m_bias + se_bias, group = WMSize,
color=as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(color = WMSize),
stat = "identity",position = position_dodge(width = 0.2)) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.2)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
coord_cartesian(ylim = c(-0.5, 0.4)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="Reproduction bias (s)",
shape ="Memory Load", color = "Memory Load")+
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c(.8, .8),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
# Exp 2
plt_RprBias_Exp2 <- ggplot(data = mRpr %>% filter(Exp == 'Exp. 2'),
aes(curDur, m_bias, ymin = m_bias - se_bias,
ymax = m_bias + se_bias, group = WMSize,
color=as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(color = WMSize),
stat = "identity",position = position_dodge(width = 0.2)) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.2)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
coord_cartesian(ylim = c(-0.5, 0.4)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="Reproduction bias (s)",
shape ="Memory Load", color = "Memory Load")+
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c(.8, .8),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
# Exp 3
plt_RprBias_Exp3 <- ggplot(data = mRpr %>% filter(Exp == 'Exp. 3'),
aes(curDur, m_bias, ymin = m_bias - se_bias,
ymax = m_bias + se_bias, group = WMSize,
color=as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(color = WMSize),
stat = "identity", position = position_dodge(width = 0.2)) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.2)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
coord_cartesian(ylim = c(-0.5, 0.4)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="Reproduction bias (s)",
shape ="Memory Load", color = "Memory Load")+
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c(.8, .8),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
# plot data for each participants
plt_RprBias_Exp3_par <- ggplot(data = mRpr_sub %>% filter(Exp == 'Exp. 3'),
aes(curDur, mBias, ymin = mBias - sdBias,
ymax = mBias + sdBias, group = WMSize,
color=as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(color = WMSize),
stat = "identity", position = position_dodge(width = 0.2)) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.2)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
facet_wrap("NSub") +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="Reproduction bias (s)",
shape ="Memory Load", color = "Memory Load")+
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c(.8, .8),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
plt_RprBias_Exp3_par
# Exp 4
plt_RprBias_Exp4 <- ggplot(data = mRpr %>% filter(Exp == 'Exp. 4'),
aes(curDur, m_bias, ymin = m_bias - se_bias,
ymax = m_bias + se_bias, group = WMSize,
color=as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(color = WMSize),
stat = "identity",position = position_dodge(width = 0.05)) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.05)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0.05)) +
coord_cartesian(ylim = c(-0.5, 0.4)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="Reproduction bias (s)",
shape ="Memory Load", color = "Memory Load")+
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c(.8, .8),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
# Exp 5
plt_RprBias_Exp5 <- ggplot(data = mRpr_Exp5,
aes(curDur, m_bias, ymin = m_bias - se_bias,
ymax = m_bias + se_bias,
group = interaction(WMSize, gap),
color=as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(linetype = gap),
stat = "identity",position = position_dodge(width = 0.2)) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.2)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
coord_cartesian(ylim = c(-0.5, 0.4)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="Reproduction bias (s)",
shape ="Memory Load", color = "Memory Load", linetype = "Gap") +
theme_new + colorSet3 +
guides(linetype = guide_legend(order = 1),
shape = guide_legend(order = 2), color = guide_legend(order = 2)) +
theme(legend.position = "top", legend.justification = c(.6, .6),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
# Exp 6
plt_RprBias_Exp6 <- ggplot(data = mRpr_Exp6,
aes(curDur, m_bias, ymin = m_bias - se_bias,
ymax = m_bias + se_bias,
group = interaction(WMSize, Exp),
color = as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(color = WMSize),
stat = "identity", position = position_dodge(width = 0.05)) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.05)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0.05)) +
facet_wrap("Exp") +
coord_cartesian(ylim = c(-0.35, 0.2)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="", y="Reproduction bias (s)",
shape ="Memory Load", color = "Memory Load") +
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c("center", "top"),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"),
strip.text = element_text(size=10, face = "bold"))
# Exp 6: Reaction Time (from the Reproduction cue onset to Reproduction onset)
plt_RT_Exp6 <- ggplot(data = mRT_Exp6,
aes(curDur, m_mRT, ymin = m_mRT - se_mRT,
ymax = m_mRT + se_mRT,
group = interaction(WMSize, Exp),
color = as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(color = WMSize), stat = "identity",
position = position_dodge(width = 0.2)) +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.2)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
facet_wrap("Exp") +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Duration (s)", y="Reaction Time (s)",
shape ="Memory Load", color = "Memory Load") +
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c("center", "top"),
legend.text = element_text(size = 8),
legend.title = element_text(size = 8, face = "bold"),
strip.text = element_text(size=10, face = "bold"))
plt_RprBias_Exp1
plt_RprBias_Exp2
plt_RprBias_Exp3
plt_RprBias_Exp4
plt_RprBias_Exp5
plt_RprBias_Exp6
plt_RT_Exp6
knitr::opts_chunk$set(echo = TRUE)
plt_RprBias_Exp3 <- ggplot(data = mRpr %>% filter(Exp == 'Exp. 3'),
aes(curDur, m_bias, ymin = m_bias - se_bias,
ymax = m_bias + se_bias, group = WMSize,
color=as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(color = WMSize),
stat = "identity", position = position_dodge(width = 0)) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(size = 2, stat="identity", position=position_dodge(width=0)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0)) +
coord_cartesian(ylim = c(-0.5, 0.4)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="Reproduction bias (s)",
shape ="Memory Load", color = "Memory Load")+
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c(.8, .8),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
knitr::opts_chunk$set(echo = TRUE)
library(rlist)
library(ez)
library(tidyverse)
library(latex2exp)
library(lsr)
library(rticles)
library(DescTools)
library(heplots)
library(lme4)
library(rstatix)
library(boot)
library(ggpubr)
library(reshape2)
source('mytheme.R')
# model version
modelversion = 'gap_log_rstan'
rstanmodelPath = 'modelrlt'
modelPath = paste0(rstanmodelPath, '/models/', modelversion)
##############################
# (1) load all valid data
# load valid data for Exp 1-5
AllExpData = read.csv(paste0("../data/AllValidData.csv")) %>% filter(valid == 1)
AllExpData$WMSize <- factor(AllExpData$WMSize, labels=c("low","medium","high"))
AllExpData$Exp <- gsub("^.{0,3}","Exp. ",AllExpData$Exp) #"Exp" to "Exp. "
# load valid data for Exp 6a, 6b and 6c
Data_Exp6 <- read.csv(paste0("../data/Exp6.csv")) %>% filter(valid == 1)
Data_Exp6$WMSize <- factor(Data_Exp6$WMSize, labels = c("low","medium","high"))
##############################
# (2) calculate accuracy
AllExpData$WMCrr <- AllExpData$TPresent == AllExpData$WMRP
Data_Exp6$WMCrr <- Data_Exp6$TPresent == Data_Exp6$WMRP
# Exp 1-4 (factor: WM load, Exp)
WMCrr <- dplyr::group_by(AllExpData%>%filter(Exp!='Exp. 5'),Exp,WMSize,NSub)%>%
dplyr::summarize(n=n(), m_WMCrr=mean(WMCrr), se_WMCrr=sd(WMCrr)/sqrt(n-1))
WMCrr %>% dplyr::group_by(Exp, WMSize) %>%
dplyr::summarize(n = n(), mean_WMCrr = mean(m_WMCrr),
se_WMCrr = sd(m_WMCrr)/sqrt(n-1) ) -> crrForExp1to4
# Exp 5 (factors: WM load, Gap)
WMCrr_Exp5 <- dplyr::group_by(AllExpData %>% filter(Exp=='Exp. 5'),
WMSize, NSub, gap) %>%
dplyr::summarize(n = n(), m_WMCrr = mean(WMCrr),
se_WMCrr = sd(WMCrr)/sqrt(n-1))
WMCrr_Exp5$gap<- factor(WMCrr_Exp5$gap, labels = c("short", "long"))
WMCrr_Exp5 %>% dplyr::group_by(gap, WMSize) %>%
dplyr::summarize(n = n(), mean_WMCrr = mean(m_WMCrr),
se_WMCrr = sd(m_WMCrr)/sqrt(n-1)) -> crrForExp5
# Exp 6 (factor: WM load, Exp)
WMCrr_Exp6 <- dplyr::group_by(Data_Exp6, Exp, WMSize, NSub) %>%
dplyr::summarize(n = n(), m_WMCrr = mean(WMCrr),
se_WMCrr = sd(WMCrr)/sqrt(n-1))
WMCrr_Exp6 %>% dplyr::group_by(Exp, WMSize) %>%
dplyr::summarize(n = n(), mean_WMCrr = mean(m_WMCrr),
se_WMCrr = sd(m_WMCrr)/sqrt(n-1) ) -> crrForExp6
##############################
# (3) calculate mean and CV of reproduction biases
AllExpData$Exp = as.factor(AllExpData$Exp)
# Exp 1-4 (factors: Duration, WM load)
mRpr_sub <- dplyr::group_by(AllExpData, curDur, Exp, NSub, WMSize) %>%
dplyr::summarize(n = n(), m_repDur = mean(repDur), sd_repDur = sd(repDur),
cv = sd_repDur/ m_repDur, mBias = mean(repDur-curDur),
sdBias = sd(repDur-curDur))
mRpr <- mRpr_sub %>% dplyr::group_by(Exp, curDur, WMSize) %>%
dplyr::summarize(n = n(), m_m_repDur = mean(m_repDur),
m_bias = mean(m_repDur-curDur),
se_bias = sd(m_repDur-curDur)/sqrt(n-1),
m_cv= mean(cv), se_cv=sd(cv)/sqrt(n-1))
# Exp 5 (factors: Duration, WM load, Gap)
Data_Exp5 <- AllExpData %>% filter(Exp == "Exp. 5") # load valid data of Exp 5
Data_Exp5$gap <- factor(Data_Exp5$gap, labels = c("short", "long")) # mark Gap
mRpr_sub_Exp5 <- dplyr::group_by(Data_Exp5, curDur, Exp, NSub, WMSize, gap) %>%
dplyr::summarize(n = n(), m_repDur = mean(repDur), sd_repDur = sd(repDur),
cv = sd_repDur/ m_repDur)
mRpr_Exp5 <- mRpr_sub_Exp5 %>% dplyr::group_by(Exp, curDur, WMSize, gap) %>%
dplyr::summarize(n = n(), m_m_repDur = mean(m_repDur),
m_bias = mean(m_repDur-curDur),
se_bias = sd(m_repDur-curDur)/sqrt(n-1),
m_cv= mean(cv), se_cv=sd(cv)/sqrt(n-1))
# Exp 6 (factors: Duration, WM load, Exp)
mRpr_sub_Exp6 <-  dplyr::group_by(Data_Exp6, curDur, Exp, NSub, WMSize) %>%
dplyr::summarize(n = n(), m_repDur = mean(repDur), sd_repDur = sd(repDur),
cv = sd_repDur/ m_repDur)
mRpr_Exp6 <- mRpr_sub_Exp6 %>% dplyr::group_by(Exp, curDur, WMSize) %>%
dplyr::summarize(n = n(), m_m_repDur = mean(m_repDur),
m_bias = mean(m_repDur-curDur),
se_bias = sd(m_repDur-curDur)/sqrt(n-1),
m_cv= mean(cv), se_cv=sd(cv)/sqrt(n-1))
##############################
# (4) calculate mean Reaction time in the reproduction phase
# RT denotes as the time from the onset of Reproduction cue
# to the onset of reproduction (response)
# mark valid RT in Exp6: criteria (200 ms ~ 2.5 sec)
Data_Exp6$validRT <- Data_Exp6$repWaitTime>=0.2 & Data_Exp6$repWaitTime<=2.5
Data_Exp6_mRT <- Data_Exp6 %>% filter(validRT == TRUE)
# calculate mean RT in factors: Duration, WM load, Exp
mRT_sub_Exp6 <-  dplyr::group_by(Data_Exp6_mRT, curDur, Exp, NSub, WMSize) %>%
dplyr::summarize(n = n(), mRT = mean(repWaitTime))
mRT_Exp6 <- mRT_sub_Exp6 %>% dplyr::group_by(Exp, curDur, WMSize) %>%
dplyr::summarize(n = n(), m_mRT = mean(mRT), se_mRT = sd(mRT)/sqrt(n-1))
plt_RprBias_Exp3 <- ggplot(data = mRpr %>% filter(Exp == 'Exp. 3'),
aes(curDur, m_bias, ymin = m_bias - se_bias,
ymax = m_bias + se_bias, group = WMSize,
color=as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(color = WMSize),
stat = "identity", position = position_dodge(width = 0)) +
geom_hline(yintercept = 0, linetype='dashed') +
geom_point(size = 2, stat="identity", position=position_dodge(width=0)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0)) +
coord_cartesian(ylim = c(-0.5, 0.4)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="Reproduction bias (s)",
shape ="Memory Load", color = "Memory Load")+
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c(.8, .8),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
plt_RprBias_Exp3
plt_RprCV_Exp3 <- ggplot(data = mRpr %>% filter(Exp == 'Exp. 3'),
aes(curDur, m_cv, ymin = m_cv - se_cv,
ymax = m_cv + se_cv, group=WMSize,
color=as.factor(WMSize),
shape = as.factor(WMSize))) +
geom_line(aes(color = WMSize),
stat = "identity",position = position_dodge(width = 0.2)) +
geom_point(size = 2, stat="identity", position=position_dodge(width=0.2)) +
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
coord_cartesian(ylim = c(0.17, 0.29)) +
scale_x_continuous(breaks=c(0.5, 0.8, 1.1, 1.4, 1.7)) +
labs(x="Durations (s)", y="CV (s)",
color = "Memory Load", shape ="Memory Load")+
theme_new + colorSet3 +
theme(legend.position = "top", legend.justification = c(.8, .8),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10, face = "bold"))
plt_WMCrr_Exp3 <- ggplot(subset(crrForExp1to4, Exp=="Exp. 3",
select=c(Exp, WMSize, n, mean_WMCrr, se_WMCrr)),
aes(WMSize, mean_WMCrr, ymin = mean_WMCrr - se_WMCrr,
ymax = mean_WMCrr + se_WMCrr, group =Exp)) +
geom_line(stat = "identity",position = position_dodge(width = 0.2)) +
geom_point(size = 1.5, stat="identity", position=position_dodge(width=0.2)) +
geom_errorbar(width=.1,  position = position_dodge(width = 0.2)) +
coord_cartesian(ylim = c(0.5, 1)) +
labs(x = "Memory load", y = "Mean accuracy") +
theme_new
plt_Exp3 <- ggarrange(plt_WMCrr_Exp3, plt_RprBias_Exp3, plt_RprCV_Exp3,
common.legend = TRUE, labels = c("a", "b","c"),
ncol=3, nrow=1, widths = c(4,4,4))
plt_Exp3
ggsave(paste0(getwd(), "/figures/plt_FigRvs2_Exp3_noPosDg.png"),
plt_Exp3, width = 8.5, height = 3.54)
